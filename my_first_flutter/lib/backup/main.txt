import 'package:flutter/material.dart';


// void main() {
//   runApp(const GaneshaToolsApp());
// }

class GaneshaToolsApp extends StatelessWidget {
  const GaneshaToolsApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: const Color(0xFFFFFFFF),
      ),
      home: SplashScreen(),
    );
  }
}









class CatalogScreen extends StatefulWidget {
  @override
  _CatalogScreenState createState() => _CatalogScreenState();
}

class _CatalogScreenState extends State<CatalogScreen> {
  final List<String> assetNames = [
    'assets/proyektor.png',
    'assets/arduino.png',
    'assets/kabel_hdmi.png',
    'assets/sensor_ultrasonik.png',
    'assets/kabel_roll.png',
    'assets/kabel_male_to_male.png',
    'assets/spidol.png',
    'assets/penghapus.png',
    'assets/kunci_ruangan.png',
  ];

  String searchText = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Katalog Alat'),
        bottom: PreferredSize(
          preferredSize: const Size.fromHeight(kToolbarHeight),
          child: Padding(
            padding: const EdgeInsets.all(8.0),
            child: TextField(
              decoration: InputDecoration(
                hintText: 'Cari Alat',
                prefixIcon: const Icon(Icons.search),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(10),
                ),
                filled: true,
                fillColor: Colors.white,
              ),
              onChanged: (value) {
                setState(() {
                  searchText = value.toLowerCase();
                });
              },
            ),
          ),
        ),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(20),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 3,
          crossAxisSpacing: 10,
          mainAxisSpacing: 10,
        ),
        itemCount: assetNames.length,
        itemBuilder: (BuildContext context, int index) {
          String assetName = assetNames[index].split('/').last.split('.').first;

          if (searchText.isNotEmpty &&
              !assetName.toLowerCase().contains(searchText)) {
            return Container();
          }

          return GestureDetector(
            onTap: () {
              showDialog(
                context: context,
                builder: (BuildContext context) {
                  return AlertDialog(
                    title: const Text('Nama Alat'),
                    content: Column(
                      mainAxisSize: MainAxisSize.min,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        const Text(
                            'Deskripsi Alat: Deskripsi alat yang panjang dan detail.'),
                        const SizedBox(height: 10),
                        const Text('Stok: 5'),
                        const SizedBox(height: 10),
                        const Text('Pilih Waktu Peminjaman:'),
                        ElevatedButton(
                          onPressed: () {
                            // Implementasi pilihan waktu peminjaman
                          },
                          child: const Text('Pilih Waktu'),
                        ),
                      ],
                    ),
                    actions: [
                      TextButton(
                        onPressed: () {
                          Navigator.of(context).pop();
                        },
                        child: const Text('Batal'),
                      ),
                    ],
                  );
                },
              );
            },
            child: Container(
              decoration: BoxDecoration(
                color: Colors.grey[200],
                borderRadius: BorderRadius.circular(10),
              ),
              child: Center(
                child: Image.asset(
                  assetNames[index],
                  width: 80,
                  height: 80,
                ),
              ),
            ),
          );
        },
      ),
      bottomNavigationBar: BottomNavigationBar(
        items: const <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Home',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.list),
            label: 'Catalog',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person),
            label: 'Profile',
          ),
        ],
        currentIndex: 1,
        selectedItemColor: const Color.fromARGB(255, 251, 255, 0),
        onTap: (index) {
          if (index == 0) {
            Navigator.of(context).pushReplacement(
                MaterialPageRoute(builder: (_) => DashboardScreen()));
          } else if (index == 1) {
            Navigator.of(context).pushReplacement(
                MaterialPageRoute(builder: (_) => CatalogScreen()));
          } else if (index == 2) {
            Navigator.of(context).pushReplacement(
                MaterialPageRoute(builder: (_) => ProfileScreen()));
          }
        },
      ),
    );
  }
}


